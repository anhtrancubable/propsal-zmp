{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"file":"reveal.esm.js","sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/utils/util.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/utils/device.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/slidecontent.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/utils/constants.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/slidenumber.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/jumptoslide.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/utils/color.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/backgrounds.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/autoanimate.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/scrollview.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/printview.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/fragments.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/overview.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/keyboard.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/location.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/controls.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/progress.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/pointer.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/utils/loader.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/plugins.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/overlay.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/touch.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/focus.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/controllers/notes.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/components/playback.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/config.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/reveal.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/reveal.js/js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In the speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tevent.target.play();\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear number\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst backgroundChanged = currentBackground !== this.previousBackground;\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( backgroundChanged && this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( backgroundChanged && currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isOverlayOpen() && ![\"Escape\", \"f\", \"c\", \"b\", \".\"].includes(event.key) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// C\n\t\t\telse if( keyCode === 67 && this.Reveal.isOverlayOpen() ) {\n\t\t\t\tthis.Reveal.closeOverlay();\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = (\n\t\t\tconfig.controls &&\n\t\t\t(config.controls !== 'speaker-only' || this.Reveal.isSpeakerNotes())\n\t\t) ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' overlay elements used\n * to preview iframes, images & videos.\n */\nexport default class Overlay {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onSlidesClicked = this.onSlidesClicked.bind( this );\n\n\t\tthis.iframeTriggerSelector = null;\n\t\tthis.mediaTriggerSelector = '[data-preview-image], [data-preview-video]';\n\n\t\tthis.stateProps = ['previewIframe', 'previewImage', 'previewVideo', 'previewFit'];\n\t\tthis.state = {};\n\n\t}\n\n\tupdate() {\n\n\t\t// Enable link previews globally\n\t\tif( this.Reveal.getConfig().previewLinks ) {\n\t\t\tthis.iframeTriggerSelector = 'a[href]:not([data-preview-link=false]), [data-preview-link]:not(a):not([data-preview-link=false])';\n\t\t}\n\t\t// Enable link previews for individual elements\n\t\telse {\n\t\t\tthis.iframeTriggerSelector = '[data-preview-link]:not([data-preview-link=false])';\n\t\t}\n\n\t\tconst hasLinkPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.iframeTriggerSelector ).length > 0;\n\t\tconst hasMediaPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.mediaTriggerSelector ).length > 0;\n\n\t\t// Only add the listener when there are previewable elements in the slides\n\t\tif( hasLinkPreviews || hasMediaPreviews ) {\n\t\t\tthis.Reveal.getSlidesElement().addEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getSlidesElement().removeEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\n\t}\n\n\tcreateOverlay( className ) {\n\n\t\tthis.dom = document.createElement( 'div' );\n\t\tthis.dom.classList.add( 'r-overlay' );\n\t\tthis.dom.classList.add( className );\n\n\t\tthis.viewport = document.createElement( 'div' );\n\t\tthis.viewport.classList.add( 'r-overlay-viewport' );\n\n\t\tthis.dom.appendChild( this.viewport );\n\t\tthis.Reveal.getRevealElement().appendChild( this.dom );\n\n\t}\n\n\t/**\n\t * Opens a lightbox that previews the target URL.\n\t *\n\t * @param {string} url - url for lightbox iframe src\n\t */\n\tpreviewIframe( url ) {\n\n\t\tthis.close();\n\n\t\tthis.state = { previewIframe: url };\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<a class=\"r-overlay-button r-overlay-external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\"><span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"r-overlay-content-inner\">\n\t\t\t\t\t<span class=\"r-overlay-error x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tthis.dom.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-external' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t}, false );\n\n\t\tthis.Reveal.dispatchEvent({ type: 'previewiframe', data: { url } });\n\n\t}\n\n\t/**\n\t * Opens a lightbox window that provides a larger view of the\n\t * given image/video.\n\t *\n\t * @param {string} url - url to the image/video to preview\n\t * @param {image|video} mediaType\n\t * @param {string} [fitMode] - the fit mode to use for the preview\n\t */\n\tpreviewMedia( url, mediaType, fitMode ) {\n\n\t\tif( mediaType !== 'image' && mediaType !== 'video' ) {\n\t\t\tconsole.warn( 'Please specify a valid media type to preview (image|video)' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.close();\n\n\t\tfitMode = fitMode || 'scale-down';\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\t\tthis.dom.dataset.previewFit = fitMode;\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\"></div>`;\n\n\t\tconst contentElement = this.dom.querySelector( '.r-overlay-content' );\n\n\t\tif( mediaType === 'image' ) {\n\n\t\t\tthis.state = { previewImage: url, previewFit: fitMode }\n\n\t\t\tconst img = document.createElement( 'img', {} );\n\t\t\timg.src = url;\n\t\t\tcontentElement.appendChild( img );\n\n\t\t\timg.addEventListener( 'load', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\timg.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load image.</span>`\n\t\t\t}, false );\n\n\t\t\t// Hide image overlays when clicking outside the overlay\n\t\t\tthis.dom.style.cursor = 'zoom-out';\n\t\t\tthis.dom.addEventListener( 'click', ( event ) => {\n\t\t\t\tthis.close();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewimage', data: { url } });\n\n\t\t}\n\t\telse if( mediaType === 'video' ) {\n\n\t\t\tthis.state = { previewVideo: url, previewFit: fitMode }\n\n\t\t\tconst video = document.createElement( 'video' );\n\t\t\tvideo.autoplay = this.dom.dataset.previewAutoplay === 'false' ? false : true;\n\t\t\tvideo.controls = this.dom.dataset.previewControls === 'false' ? false : true;\n\t\t\tvideo.loop = this.dom.dataset.previewLoop === 'true' ? true : false;\n\t\t\tvideo.muted = this.dom.dataset.previewMuted === 'true' ? true : false;\n\t\t\tvideo.playsInline = true;\n\t\t\tvideo.src = url;\n\t\t\tcontentElement.appendChild( video );\n\n\t\t\tvideo.addEventListener( 'loadeddata', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\tvideo.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load video.</span>`;\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewvideo', data: { url } });\n\n\t\t}\n\t\telse {\n\t\t\tthrow new Error( 'Please specify a valid media type to preview' );\n\t\t}\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', ( event ) => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t}\n\n\tpreviewImage( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'image', fitMode );\n\n\t}\n\n\tpreviewVideo( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'video', fitMode );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\ttoggleHelp( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.showHelp() : this.close();\n\t\t}\n\t\telse {\n\t\t\tif( this.dom ) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tshowHelp() {\n\n\t\tif( this.Reveal.getConfig().help ) {\n\n\t\t\tthis.close();\n\n\t\t\tthis.createOverlay( 'r-overlay-help' );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p>';\n\n\t\t\tlet shortcuts = this.Reveal.keyboard.getShortcuts(),\n\t\t\t\tbindings = this.Reveal.keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tthis.viewport.innerHTML = `\n\t\t\t\t<header class=\"r-overlay-header\">\n\t\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t\t<div class=\"r-overlay-help-content\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\t\tthis.close();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'showhelp' });\n\n\t\t}\n\n\t}\n\n\tisOpen() {\n\n\t\treturn !!this.dom;\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tclose() {\n\n\t\tif( this.dom ) {\n\t\t\tthis.dom.remove();\n\t\t\tthis.dom = null;\n\n\t\t\tthis.state = {};\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'closeoverlay' });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetState() {\n\n\t\treturn this.state;\n\n\t}\n\n\tsetState( state ) {\n\n\t\t// Ignore the incoming state if none of the preview related\n\t\t// props have changed\n\t\tif( this.stateProps.every( key => this.state[ key ] === state[ key ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( state.previewIframe ) {\n\t\t\tthis.previewIframe( state.previewIframe );\n\t\t}\n\t\telse if( state.previewImage ) {\n\t\t\tthis.previewImage( state.previewImage, state.previewFit );\n\t\t}\n\t\telse if( state.previewVideo ) {\n\t\t\tthis.previewVideo( state.previewVideo, state.previewFit );\n\t\t}\n\t\telse {\n\t\t\tthis.close();\n\t\t}\n\n\t}\n\n\tonSlidesClicked( event ) {\n\n\t\tconst target = event.target;\n\n\t\tconst linkTarget = target.closest( this.iframeTriggerSelector );\n\t\tconst mediaTarget = target.closest( this.mediaTriggerSelector );\n\n\t\t// Was an iframe lightbox trigger clicked?\n\t\tif( linkTarget ) {\n\t\t\tif( event.metaKey || event.shiftKey || event.altKey ) {\n\t\t\t\t// Let the browser handle meta keys naturally so users can cmd+click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet url = linkTarget.getAttribute( 'href' ) || linkTarget.getAttribute( 'data-preview-link' );\n\t\t\tif( url ) {\n\t\t\t\tthis.previewIframe( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\t// Was a media lightbox trigger clicked?\n\t\telse if( mediaTarget ) {\n\t\t\tif( mediaTarget.hasAttribute( 'data-preview-image' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewImage || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewImage( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( mediaTarget.hasAttribute( 'data-preview-video' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewVideo || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( !url ) {\n\t\t\t\t\tlet source = mediaTarget.querySelector( 'source' );\n\t\t\t\t\tif( source ) {\n\t\t\t\t\t\turl = source.getAttribute( 'src' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewVideo( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.close();\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows.\n\t// - true: Display controls on all screens\n\t// - false: Hide controls on all screens\n\t// - \"speaker-only\": Only display controls in the speaker view\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when returning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Overlay from './controllers/overlay.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if initialize() has been invoked for this reveal instance\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\toverlay = new Overlay( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\tif( initialized ) throw 'Reveal.js has already been initialized.';\n\n\t\tinitialized = true;\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Don't proceed if this instance has been destroyed\n\t\tif( initialized === false ) return;\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tinitialized = false;\n\n\t\t// There's nothing to destroy if this instance hasn't finished\n\t\t// initializing\n\t\tif( ready === false ) return;\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\toverlay.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presentation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Indicate when we're on a vertical slide\n\t\trevealElement.classList.toggle( 'is-vertical-slide', currentVerticalSlides.length > 1 );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\toverlay.update();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t\t...overlay.getState()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\n\t\t\toverlay.setState( state );\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse if( config.rtl ) {\n\t\t\t\t\tnavigateRight({skipFragments});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: overlay.toggleHelp.bind( overlay ),\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisOverlayOpen: overlay.isOpen.bind( overlay ),\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Start/stop all media inside of the current slide\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Lightbox previews\n\t\tpreviewIframe: overlay.previewIframe.bind( overlay ),\n\t\tpreviewImage: overlay.previewImage.bind( overlay ),\n\t\tpreviewVideo: overlay.previewVideo.bind( overlay ),\n\n\t\tshowPreview: overlay.previewIframe.bind( overlay ), // deprecated in favor of showIframeLightbox\n\t\thidePreview: overlay.close.bind( overlay ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tkeyboard,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay: overlay.close.bind( overlay ),\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","video","isSpeakerNotes","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","isSpeakerNotesWindow","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","paused","ended","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","previousBackgroundHash","currentBackgroundHash","currentVideo","previousVideo","currentVideoParent","backgroundChanged","slideContent","currentBackgroundContent","backgroundImageURL","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isOverlayOpen","includes","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","toggleHelp","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","hasVerticalSiblings","parentElement","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Overlay","onSlidesClicked","iframeTriggerSelector","mediaTriggerSelector","stateProps","previewLinks","hasLinkPreviews","hasMediaPreviews","createOverlay","dom","previewIframe","close","previewMedia","mediaType","fitMode","previewFit","previewImage","img","previewVideo","previewAutoplay","previewControls","loop","previewLoop","previewMuted","playsInline","showHelp","help","html","isOpen","every","linkTarget","mediaTarget","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","shuffle","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","initialized","ready","navigationHistory","slidesTransform","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","overlay","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","showPreview","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"debugId":null}},
    {"offset": {"line": 2851, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/%40kurkle/color/dist/color.esm.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3508, "column": 0}, "map": {"version":3,"file":"helpers.dataset.js","sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.core.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.math.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.collection.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.extras.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.easing.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.color.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.animations.defaults.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.layouts.defaults.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.intl.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.ticks.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.scale.defaults.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.defaults.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.canvas.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.options.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.config.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.curve.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.dom.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.interpolation.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.rtl.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.segment.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/helpers/helpers.dataset.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n"],"names":["noop","uid","id","isNullOrUndef","value","undefined","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","_getKeyResolver","obj","resolveObjectKey","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","n","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","constructor","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"debugId":null}},
    {"offset": {"line": 6404, "column": 0}, "map": {"version":3,"file":"chart.js","sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.animator.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.animation.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.animations.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.datasetController.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.bar.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.bubble.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.doughnut.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.line.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.polarArea.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.pie.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.radar.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/controllers/controller.scatter.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.adapters.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.interaction.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.layouts.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/platform/platform.base.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/platform/platform.basic.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/platform/platform.dom.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/platform/index.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.element.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.scale.autoskip.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.scale.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.typedRegistry.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.registry.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.plugins.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.config.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/core/core.controller.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/elements/element.arc.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/elements/element.line.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/elements/element.point.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/elements/element.bar.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.colors.ts","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.decimation.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.filler/index.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.legend.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.title.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.subtitle.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/plugins/plugin.tooltip.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.category.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.linearbase.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.linear.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.logarithmic.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.radialLinear.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.time.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/scales/scale.timeseries.js","file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getDatasetClipArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"debugId":null}},
    {"offset": {"line": 17889, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Essager%20500Mb/Projects/propsal-zmp/node_modules/chart.js/auto/auto.js"],"sourcesContent":["import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":[],"mappings":";;;AAAA;;AAEA,4JAAA,CAAA,QAAK,CAAC,QAAQ,IAAI,4JAAA,CAAA,gBAAa;;uCAGhB,4JAAA,CAAA,QAAK","ignoreList":[0],"debugId":null}}]
}